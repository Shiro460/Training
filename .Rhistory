sbuject1 <- list(fullname = subject_name[1],
temparature = temparature[1],
flu_status = ful_status[1],
gender = gender[1],
blood = blood[1],
symptoms = symptoms[1]);
symptoms <- factor(c("SEVERE", "MILD", "MODERATE"),
levels = c("MILD", "MODERATE", "SEVERE"),
ordered = TRUE);
sbuject1 <- list(fullname = subject_name[1],
temparature = temparature[1],
flu_status = ful_status[1],
gender = gender[1],
blood = blood[1],
symptoms = symptoms[1])
subject_name <- c("John Doe", "Jane Doe", "Steve Graves" )
subject_name <- c("John Doe", "Jane Doe", "Steve Graves" )
temparature <- c(98.1, 98.6, 101.4)
flu_status <- c(FALSE, FALSE, TRUE)
gender <- factor(c("MALE", "FEMALE", "MALE"))
blood <- factor(c("O", "AB", "A"),
levels = c("A", "B", "AB", "0"))
symptoms <- factor(c("SEVERE", "MILD", "MODERATE"),
levels = c("MILD", "MODERATE", "SEVERE"),
ordered = TRUE)
sbuject1 <- list(fullname = subject_name[1],
temparature = temparature[1],
flu_status = ful_status[1],
gender = gender[1],
blood = blood[1],
symptoms = symptoms[1])
sbuject1 <- list(fullname = subject_name[1],
temparature = temparature[1],
flu_status = flu_status[1],
gender = gender[1],
blood = blood[1],
symptoms = symptoms[1])
remove (sbuject1)
remove(subject_name, temparature, flu_status, gender, blood, symptoms)
source('P:/Training/00_R/Training/2.1_Textbook.R', echo=TRUE)
pt_data <- data.frame(subject_name, temparature, flu_status, gender, blood, symptoms, stringsAsFactors = FALSE)
pt_data
pt_data$subject_name
pt_data[1,
]
pt_data[,1]
pt_data
blood <- factor(c("O", "AB", "A"),
levels = c("A", "B", "AB", "0"))
blood <- factor(c("O", "AB", "A"))
remove(blood)
blood <- factor(c("O", "AB", "A"))
pt_data
blood <- factor(c("O", "AB", "A"),
levels = c("A", "B", "AB", "0"))
blood
blood <- factor(c("O", "AB", "A"),
levels = c("A", "B", "AB", "0"))
pt_data
blood <- factor(c("O", "AB", "A"))
pt_data
blood <- factor(c("A", "AB", "A"))
pt_data
blood <- factor(c("A", "O", "A"))
pt_data
blood <- factor(c("A", "O", "A"))
pt_data
rm(blood)
pt_data
rm(pt_data)
pt_data <- data.frame(subject_name, temparature, flu_status, gender, blood, symptoms, stringsAsFactors = FALSE)
blood <- factor(c("A", "O", "A"))
pt_data <- data.frame(subject_name, temparature, flu_status, gender, blood, symptoms, stringsAsFactors = FALSE)
pt_data <- data.frame(subject_name, temparature, flu_status, gender, blood, symptoms, stringsAsFactors = FALSE)
blood <- factor(c("A", "O", "A"))
pt_data
rm(subject_name, temparature, flu_status, gender, blood, symptoms, subject1, pt_data)
source('P:/Training/00_R/Training/2.1_Textbook.R', echo=TRUE)
pt_data
blood
rm(pt_data)
blood <- factor(c("O", "AB", "A"),
levels = c("A", "B", "AB", "O"))
blood
pt_data
pt_data <- data.frame(subject_name, temparature, flu_status, gender, blood, symptoms, stringsAsFactors = FALSE)
pt_data
source('P:/Training/00_R/Training/2.1_Textbook.R', encoding = 'UTF-8')
source('P:/Training/00_R/Training/2.1_Textbook.R', encoding = 'UTF-8')
ls
ls()
pt_data
save(blood, flu_status, gender, subject_name, symptoms, temparature, file = "training.RData")
save(blood, flu_status, gender, subject_name, symptoms, temparature, subject1, pt_data, file = "training.RData")
q()
rm (temparature)
#データをロードする
load("training.RData")
rm("temparature")
# 削除コマンド
# rm(temparature)
load("training.RData")
# データをロードする
# このテストをするときは、事前にsave()コマンドで保存したもののうち
# なにか１つでも削除したうえで試してみる必要があります。
# 削除コマンド(１つの因子を削除します)
# rm("temparature")
# 削除コマンド(セッション内にあるすべてのオブジェクトを削除します)
rm(list=ls())
load("training.RData")
# usedcar.csvを使用するために、今まで使用していたデータセットを削除
rm(ls.list())
# usedcar.csvを使用するために、今まで使用していたデータセットを削除
rm(list=ls())
# usedcar.csvをインポート
usedcars <- read.csv("usedcars.csv", stringAsFactors = FALSE)
# usedcar.csvをインポート
usedcars <- read.csv("usedcars.csv", stringAsFactors = FALSE)
# usedcar.csvをインポート
usedcars <- read.csv("usedcars.csv")
source('P:/Training/00_R/Training/2.3_Textbook.R', encoding = 'UTF-8', echo=TRUE)
source('P:/Training/00_R/Training/2.3_Textbook.R', encoding = 'UTF-8', echo=TRUE)
source('P:/Training/00_R/Training/2.3_Textbook.R', encoding = 'UTF-8', echo=TRUE)
View(usedcars)
View(usedcars)
rm (list=ls())
# usedcar.csvをインポート
usedcars <- read.csv("usedcars.csv", stringAsFactors = FALSE)
source('P:/Training/00_R/Training/2.3_Textbook.R', encoding = 'UTF-8', echo=TRUE)
# データフレーム、ベクトル、リストなどのRデータ構造の確認
str()
# データフレーム、ベクトル、リストなどのRデータ構造の確認
str(usedcars)
# 要約統計量の出力
sum(usedcar$year)
source('P:/Training/00_R/Training/2.3_Textbook.R', encoding = 'UTF-8', echo=TRUE)
# 要約統計量の出力
summary(usedcar$year)
# 要約統計量の出力
summary(usedcars$year)
# 複数(priceとmileage）の要約統計量の出力
summary(usedcars$[c(price, mileage)])
# 複数(priceとmileage）の要約統計量の出力
summary(usedcars$[c("price", "mileage")])
# 複数(priceとmileage）の要約統計量の出力
summary(usedcars$[c("price", "mileage")]
# 複数(priceとmileage）の要約統計量の出力
summary(usedcars[c("price", "mileage")])
source('P:/Training/00_R/Training/2.3_Textbook.R', encoding = 'UTF-8', echo=TRUE)
# 中心傾向
# 1.平均
# mileageに対する平均の取得
mean(usedcars&mileage)
source('P:/Training/00_R/Training/2.3_Textbook.R', encoding = 'UTF-8', echo=TRUE)
source('P:/Training/00_R/Training/2.3_Textbook.R', encoding = 'UTF-8', echo=TRUE)
source('P:/Training/00_R/Training/2.3_Textbook.R', encoding = 'UTF-8', echo=TRUE)
View(usedcars)
View(usedcars)
mean(usedcars[c("price", "mileage")])
# 2.中央値
# mileageに対する中央値の出力
median(usedcars$mileage)
# 3.範囲(レンジ)
# mileageに対するレンジの出力
range(usedcars$mileage)
# mileageに対するレンジの差分の出力
diff(usedcars$mileage)
# mileageに対するレンジの差分の出力
diff(range(usedcars$mileage))
diff(range(usedcars$price))
# 4.四分位範囲(Interquartile Range)
# mileageに対する四分位範囲の出力
IQR(usedcars$mileage)
# 5.五数要約
# mileageに対する五数要約の出力
quartile(usedcars$mileage)
# 5.五数要約
# mileageに対する五数要約の出力
quantile(usedcars$mileage)
# 6.任意の分位数
# mileageに対する1パーセンタイルと99パーセンタイルの分位数の出力
quantile(usedcars$mileage, probs = c(0.01, 0.99))
source('P:/Training/00_R/Training/2.3_Textbook.R', encoding = 'UTF-8', echo=TRUE)
# 数値変数の可視化(箱ひげ図)
boxplot(usedcars$price, main="Boxplot of Used Car Prices", ylab="Private($)")
boxplot(usedcars$price, main="Boxplot of Used Car Mileage", ylab="Odometer(mi")
boxplot(usedcars$price, main="Boxplot of Used Car Mileage", ylab="Odometer(mi)")
boxplot(usedcars$mileage, main="Boxplot of Used Car Mileage", ylab="Odometer(mi)")
# 数値変数の可視化(ヒストグラム)
hist(usedcars$price, main="Boxplot of Used Car Prices", xlab="Private($)")
hist(usedcars$mileage, main="Boxplot of Used Car Mileage", xlab="Odometer(mi)")
# 数値変数の可視化(ヒストグラム)
hist(usedcars$price, main="Histgram of Used Car Prices", xlab="Private($)")
hist(usedcars$mileage, main="Histgram of Used Car Mileage", xlab="Odometer(mi)")
hist(usedcars$mileage, main="Histgram of Used Car Mileage", xlab="Odometer(mi)", breaks = 10)
hist(usedcars$mileage, main="Histgram of Used Car Mileage", xlab="Odometer(mi)", breaks = 10)
hist(usedcars$mileage, main="Histgram of Used Car Mileage", xlab="Odometer(mi)", breaks = 3)
hist(usedcars$mileage, main="Histgram of Used Car Mileage", xlab="Odometer(mi)", breaks = 100)
# ヒストグラムのビンの数をベクトル指定で指定
hist(usedcars$mileage, main="Histgram of Used Car Mileage", xlab="Odometer(mi)", breaks = c(5000, 10000, 15000, 20000))
# ヒストグラムのビンの数をベクトル指定で指定
hist(usedcars$mileage, main="Histgram of Used Car Mileage", xlab="Odometer(mi)", breaks = c(0, 5000, 10000, 15000, 20000))
# ヒストグラムのビンの数をベクトル指定で指定
hist(usedcars$price, main="Histgram of Used Car Prices", xlab="Private($)", breaks = c(0, 5000, 10000, 15000, 20000))
# 散布度の測定
# 分散
var(usedcars$price)
var(usedcars[c(price, mileage)])
# 標準偏差
sd(usedcars$price)
# カテゴリ変数の分析
# 1次元表
table(usecars$year)
# カテゴリ変数の分析
# 1次元表
table(usedcars$year)
table(usedcars$model()
table(usedcars$model)
table(usedcars$model)
table(usedcars$color)
# モデルの1次元表をmodel_tableに定義し、直接構成比を出力
model_table <- table(usedcars$model)
prop.table(model_table)
# 色の直接構成比を%を単位として出力
color_table <- table(usedcars$color)
color_pct <- prop.table(coloar_table)*100
color_pct <- prop.table(color_table)*100
round(color_pct, digit = 1)
# 散布図の作成
plot(x = usedcars$mileage, y = usedcars$price,
main = "Scatterplot of Price vs. Mileage",
xlab = "Used Car Odometer (mi)",
ylab = "Used Car Price ($)")
# 2次元クロス表(分割表)の作成
# 2次元クロス表は、名義変数の分析に使われる
install.packages("gmodels")
# gmodelsパッケージをロード
library(gmodels)
color
View(usedcars)
usedcars$coloar
usedcars$color
summary(usedcars$color)
# 地味な色かそうでないかをダミー変数で定義
usedcars$consevative <- usedcars$color %in% c("Black", "Gray", "Silver", "White")
table (usedcars$consevative)
View(usedcars)
View(usedcars)
# 車の色についてクロステーブルの出力
CrossTable(x = usedcars$model, y = usedcars$consevative)
CrossTable(x = usedcars$model, y = usedcars$color)
# 車の色についてクロステーブルの出力
CrossTable(x = usedcars$model, y = usedcars$consevative)
# 車の色についてクロステーブルの出力
CrossTable(x = usedcars$model, y = usedcars$consevative, chisq = TRUE)
# 車の色についてクロステーブルの出力
CrossTable(x = usedcars$model, y = usedcars$consevative, chisq = TRUE)
q()
